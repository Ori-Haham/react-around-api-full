{"ast":null,"code":"class Auth {\n  constructor(baseUrl) {\n    this.register = (path, email, password) => {\n      return fetch(`${BASE_URL}/${path}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      }).then(res => {\n        return res.json();\n      });\n    };\n\n    this.authorize = (email, password) => {\n      return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      }).then(response => response.json()).then(data => {\n        if (data.token) {\n          localStorage.removeItem('jwt');\n          localStorage.setItem('jwt', data.token);\n          console.log('ori:', data);\n          return data;\n        }\n      });\n    };\n\n    this.getAuthorizaedContent = token => {\n      return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        return response.json();\n      }).catch(err => console.log(err));\n    };\n\n    this._baseUrl = baseUrl;\n  }\n\n  postMethod(path) {\n    return fetch(`${this._baseUrl}/${path}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => {\n      return res.json();\n    });\n  }\n\n}\n\nconst BASE_URL = 'https://register.nomoreparties.co';\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => {\n    return res.json();\n  });\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(response => response.json()).then(data => {\n    if (data.token) {\n      localStorage.removeItem('jwt');\n      localStorage.setItem('jwt', data.token);\n      console.log('ori:', data);\n      return data;\n    }\n  });\n};\nexport const getAuthorizaedContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"names":["Auth","constructor","baseUrl","register","path","email","password","fetch","BASE_URL","method","headers","body","JSON","stringify","then","res","json","authorize","response","data","token","localStorage","removeItem","setItem","console","log","getAuthorizaedContent","Authorization","catch","err","_baseUrl","postMethod"],"sources":["C:/dev/around-react-auth/react-around-auth/src/utils.js/auth.js"],"sourcesContent":["class Auth {\r\n  constructor(baseUrl) {\r\n    this._baseUrl = baseUrl;\r\n  }\r\n\r\n  postMethod(path) {\r\n    return fetch(`${this._baseUrl}/${path}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    }).then((res) => {\r\n      return res.json();\r\n    });\r\n  }\r\n\r\n  register = (path, email, password) => {\r\n    return fetch(`${BASE_URL}/${path}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    }).then((res) => {\r\n      return res.json();\r\n    });\r\n  };\r\n\r\n  authorize = (email, password) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.token) {\r\n          localStorage.removeItem('jwt');\r\n          localStorage.setItem('jwt', data.token);\r\n          console.log('ori:', data);\r\n          return data;\r\n        }\r\n      });\r\n  };\r\n\r\n  getAuthorizaedContent = (token) => {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n}\r\n\r\nconst BASE_URL = 'https://register.nomoreparties.co';\r\n\r\nexport const register = (email, password) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  }).then((res) => {\r\n    return res.json();\r\n  });\r\n};\r\n\r\nexport const authorize = (email, password) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data.token) {\r\n        localStorage.removeItem('jwt');\r\n        localStorage.setItem('jwt', data.token);\r\n        console.log('ori:', data);\r\n        return data;\r\n      }\r\n    });\r\n};\r\n\r\nexport const getAuthorizaedContent = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}